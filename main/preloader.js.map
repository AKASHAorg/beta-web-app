{"version":3,"file":"preloader.js","sourceRoot":"","sources":["preloader.ts"],"names":[],"mappings":";;AACA,yCAAiC;AACjC,iDAAyD;AAEzD;IAEI,MAAM,SAAS,GAAG,MAAM,CAAC,MAAM,CAAC,EAAE,EAAE,kBAAO,CAAC,CAAC;IAE7C,MAAM,CAAC,IAAI,CAAC,kBAAO,CAAC,MAAM,CAAC,CAAC,OAAO,CAAC,CAAC,MAAM;QACvC,MAAM,CAAC,IAAI,CAAC,kBAAO,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,MAAM;YAC/C,SAAS,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,MAAM,CAAC,GAAG,IAAI,0BAAW,CAAC,kBAAO,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,MAAM,CAAC,EAAE,MAAM,CAAC,CAAC;QAC/F,CAAC,CAAC,CAAC;IACP,CAAC,CAAC,CAAC;IAEH,MAAM,CAAC,IAAI,CAAC,kBAAO,CAAC,MAAM,CAAC,CAAC,OAAO,CAAC,CAAC,MAAM;QACvC,MAAM,CAAC,IAAI,CAAC,kBAAO,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,MAAM;YAC/C,EAAE,CAAC,CAAC,MAAM,KAAK,SAAS,CAAC,CAAC,CAAC;gBACvB,SAAS,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,MAAM,CAAC,GAAG,IAAI,yBAAU,CAC7C,kBAAO,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,MAAM,CAAC,EAC9B,kBAAO,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,SAAS,CAAC,EACjC,MAAM,CACT,CAAC;YACN,CAAC;QACL,CAAC,CAAC,CAAC;IACP,CAAC,CAAC,CAAC;IACH,MAAM,CAAC,SAAS,CAAC;AACrB,CAAC;AAED,MAAM,CAAC,SAAS,CAAC,GAAG,SAAS,EAAE,CAAC;AAEhC,MAAM,CAAC,MAAM,CAAC,GAAG;IACb,MAAM,IAAI,KAAK,CAAC,gBAAgB,CAAC,CAAC;AACtC,CAAC,CAAC","sourcesContent":["// import { SpellCheckHandler, ContextMenuListener, ContextMenuBuilder } from 'electron-spellchecker';\nimport Channel from './channels';\nimport { ApiListener, ApiRequest } from './ipcPreloader';\n// Linux: libxtst-dev, libx11-dev, libxkbfile-dev\nfunction injectApi() {\n\n    const AkashaApi = Object.assign({}, Channel);\n\n    Object.keys(Channel.client).forEach((module) => {\n        Object.keys(Channel.client[module]).forEach((method) => {\n            AkashaApi.client[module][method] = new ApiListener(Channel.client[module][method], method);\n        });\n    });\n\n    Object.keys(Channel.server).forEach((module) => {\n        Object.keys(Channel.server[module]).forEach((method) => {\n            if (method !== 'manager') {\n                AkashaApi.server[module][method] = new ApiRequest(\n                    Channel.server[module][method],\n                    Channel.server[module]['manager'],\n                    method\n                );\n            }\n        });\n    });\n    return AkashaApi;\n}\n\nwindow['Channel'] = injectApi();\n\nwindow['eval'] = function () {\n    throw new Error('eval disabled.');\n};\n\n/*\n //spellchecking stuff\n window['spellCheckHandler'] = new SpellCheckHandler();\n\n if (process.env.NODE_ENV !== 'development') {\n setTimeout(() => window['spellCheckHandler'].attachToInput(), 1000);\n window['spellCheckHandler'].switchLanguage(navigator.language);\n window['contextMenuBuilder'] = new ContextMenuBuilder(window['spellCheckHandler']);\n\n window['contextMenuListener'] = new ContextMenuListener((info) => {\n window['contextMenuBuilder'].showPopupMenu(info);\n });\n }\n */"]}